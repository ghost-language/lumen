import Ball from 'ball'
import Paddle from 'paddle'
import LevelMaker from 'levelMaker'
import BaseState from 'states/baseState'

class PlayState extends BaseState {
  function constructor() {
    this.ball = Ball.new()
    this.paddle = Paddle.new()
    this.levelMaker = LevelMaker.new()
    this.bricks = this.levelMaker.createMap()
  }

  function update() {
    this.paddle.update()
    this.ball.update()

    // reverse the Y velocity if the collision is detected between the paddle and ball
    if (this.ball.collides(this.paddle)) {
      this.ball.dy = -this.ball.dy
    }

    // detect collision across all bricks with the ball
    for (brick in this.bricks) {
      if (brick.inPlay and this.ball.collides(brick)) {
        brick.hit()
      }
    }
  }

  function draw() {
    // render bricks
    for (brick in this.bricks) {
      brick.draw()
    }

    this.paddle.draw()
    this.ball.draw()
  }
}